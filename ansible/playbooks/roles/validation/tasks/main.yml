- name: Validate Cluster Nodes
  tasks:
    - name: Verify if all nodes have public IPs
      set_fact:
        has_public_ip: "{{ nodes | selectattr('web_ingress', 'defined') | list | length > 0 }}"
      failed_when: not has_public_ip
      msg: "Validation failed: No nodes have a public IP."

    - name: Check SSH and Sudo Access
      shell: sudo -n echo "Sudo check passed"
      register: ssh_sudo_result
      ignore_errors: yes
      failed_when: "'Sudo check passed' not in ssh_sudo_result.stdout"
      changed_when: no
      tags: ssh_sudo_access

    - name: Verify Internet Access
      shell: ping -c 3 www.google.com
      register: internet_access_result
      ignore_errors: yes
      failed_when: "'0% packet loss' not in internet_access_result.stdout"
      changed_when: no
      tags: internet_access

    - name: Check System Resources
      shell: |
        echo "Memory: $(grep MemTotal /proc/meminfo | awk '{print $2}') kB"
        echo "CPU Cores: $(nproc)"
      register: system_resources_result
      changed_when: no
      tags: system_resources
      failed_when: >
        system_resources_result.stdout_lines[0].split()[1]|int < 8000000 or
        system_resources_result.stdout_lines[1].split()[2]|int < 1

    - name: Verify Ubuntu Version
      shell: lsb_release -a
      register: ubuntu_version_result
      ignore_errors: yes
      failed_when: "'Ubuntu 22.04' not in ubuntu_version_result.stdout"
      changed_when: no
      tags: ubuntu_version

    - name: Check Port Exposure
      shell: |
        for port in 22 80 443 2049 4646 5432; do
          nc -zv {{ inventory_hostname }} $port || echo "Port $port closed"
        done
      register: port_exposure_result
      changed_when: no
      tags: port_exposure
      failed_when: "'succeeded' in port_exposure_result.stderr"

    - name: Write node status to NFS
      shell: |
        echo "{{ inventory_hostname }} | success" | sudo tee -a {{ shared_dir }}/node_status
      changed_when: no
      tags: node_status_write

    - name: Verify NFS status on all nodes
      shell: |
        grep -q '{{ inventory_hostname }} | success' {{ shared_dir }}/node_status && echo "{{ inventory_hostname }} | success" || echo "{{ inventory_hostname }} | failed"
      register: nfs_status_check
      failed_when: "'failed' in nfs_status_check.stdout"
      changed_when: no
      tags: nfs_status_check

    - name: Clean up status file on NFS
      shell: sudo rm -f {{ shared_dir }}/node_status
      changed_when: yes
      tags: cleanup
      when: ansible_play_hosts[-1] == inventory_hostname  # Cleanup only after all nodes are validated
